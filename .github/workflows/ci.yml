name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting (if configured)
      run: npm run lint || echo "No lint script found"
      continue-on-error: true

    - name: Run Jest tests
      run: npm run test:ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Run Playwright tests (with Allure)
      run: npm run test:playwright

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.node-version }}
        path: |
          test-results/
          coverage/
          allure-results/

    - name: Generate Allure Report
      if: always()
      run: |
        npx allure generate --clean allure-results -o allure-report || echo "Allure report generation failed"

    - name: Upload Allure Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-report-${{ matrix.node-version }}
        path: allure-report/

    - name: Publish Test Results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Jest Tests (${{ matrix.node-version }})
        path: test-results/junit.xml
        reporter: jest-junit
        fail-on-error: true

    - name: Comment coverage on PR
      uses: romeovs/lcov-reporter-action@v0.3.1
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        lcov-file: ./coverage/lcov.info

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build || echo "No build script found"

    - name: Run security audit
      run: npm audit --audit-level moderate
